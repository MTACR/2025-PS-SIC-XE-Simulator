plugins {
    id 'java' // Adiciona o plugin Java
    id 'application' // Se for uma aplicação com um ponto de entrada
    id 'org.openjfx.javafxplugin' version '0.0.14' // Para lidar com o bloco javafx {...}
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JUnit 5 (JUnit Jupiter API e Engine)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    // JUnit Platform Suite API
    testImplementation "org.junit.platform:junit-platform-suite-api:1.9.3"

    // Dependências do JavaFX
    implementation 'org.openjfx:javafx-controls:17.0.2'
    implementation 'org.openjfx:javafx-fxml:17.0.2'
    implementation 'org.openjfx:javafx-media:17.0.2'
}

test {
    useJUnitPlatform() // Necessário para rodar testes JUnit 5
}

// Definição correta dos diretórios de código-fonte
sourceSets {
    main {
        java.srcDirs = ['src/main/java']
    }
    test {
        java.srcDirs = ['src/test/java']
    }
}

application {
    mainClass = 'sicxesimulator.Main'
    mainModule = 'sicxesimulator'
}

// Configuração do JavaFX (é preciso o plugin `org.openjfx.javafxplugin` para reconhecer este bloco)
javafx {
    version = "17.0.2"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media']
}
